
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "modulesleft+-left/*leftDEFID STRING NUMBER DO RETURN CONST DEF END DEFMODULE DEFP empty :  modules : module\n                | modules module  module : DEFMODULE ID do_block  statements : statement\n                   | statements statement  statement : assignment\n                  | function_definition\n                  | private_function_definition\n                  | do_block  assignment_qualifier : CONST  assignment : ID '=' expression\n                   | assignment_qualifier ID '=' expression  function_definition : DEF ID '(' def_argument_list ')' do_block  private_function_definition : DEFP ID '(' def_argument_list ')' do_block  def_argument : ID\n                     | assignment  def_argument_list : empty  def_argument_list : def_argument\n                          | def_argument_list ',' def_argument  do_block : DO END  do_return : RETURN\n                  | ''  do_block : DO statements END  do_block : DO statements do_return expression END  do_block : DO do_return expression END  expression : constant\n                   | expression '+' constant\n                   | expression '-' constant\n                   | expression '*' constant\n                   | expression '/' constant\n                   | expression '^' constant\n                   | expression '%' constant  constant : ID\n                 | NUMBER\n                 | STRING\n                 | '(' expression ')' "
    
_lr_action_items = {'':([6,10,11,14,17,18,20,21,24,25,26,28,30,31,40,45,49,50,51,52,53,54,55,56,57,67,69,],[8,-8,8,-7,-5,-9,-21,-10,-6,-24,-36,-35,-34,-27,-26,-12,-25,-30,-32,-33,-31,-29,-28,-37,-13,-15,-14,]),'DO':([5,6,10,11,14,17,18,20,21,24,25,26,28,30,31,40,45,49,50,51,52,53,54,55,56,57,64,66,67,69,],[6,6,-8,6,-7,-5,-9,-21,-10,-6,-24,-36,-35,-34,-27,-26,-12,-25,-30,-32,-33,-31,-29,-28,-37,-13,6,6,-15,-14,]),'RETURN':([6,10,11,14,17,18,20,21,24,25,26,28,30,31,40,45,49,50,51,52,53,54,55,56,57,67,69,],[9,-8,9,-7,-5,-9,-21,-10,-6,-24,-36,-35,-34,-27,-26,-12,-25,-30,-32,-33,-31,-29,-28,-37,-13,-15,-14,]),'$end':([1,2,4,7,20,25,40,49,],[-2,0,-3,-4,-21,-24,-26,-25,]),'/':([26,27,28,30,31,36,44,45,50,51,52,53,54,55,56,57,],[-36,41,-35,-34,-27,41,41,41,-30,-32,-33,-31,-29,-28,-37,41,]),'^':([26,27,28,30,31,36,44,45,50,51,52,53,54,55,56,57,],[-36,38,-35,-34,-27,38,38,38,-30,-32,-33,-31,-29,-28,-37,38,]),'(':([8,9,12,23,29,32,34,35,37,38,39,41,42,43,46,],[-23,-22,29,29,29,29,47,48,29,29,29,29,29,29,29,]),'DEF':([6,10,11,14,17,18,20,21,24,25,26,28,30,31,40,45,49,50,51,52,53,54,55,56,57,67,69,],[22,-8,22,-7,-5,-9,-21,-10,-6,-24,-36,-35,-34,-27,-26,-12,-25,-30,-32,-33,-31,-29,-28,-37,-13,-15,-14,]),',':([26,28,30,31,45,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,68,],[-36,-35,-34,-27,-12,-1,-1,-30,-32,-33,-31,-29,-28,-37,-13,65,-18,-19,-16,-17,65,-20,]),'%':([26,27,28,30,31,36,44,45,50,51,52,53,54,55,56,57,],[-36,39,-35,-34,-27,39,39,39,-30,-32,-33,-31,-29,-28,-37,39,]),'DEFMODULE':([0,1,2,4,7,20,25,40,49,],[3,-2,3,-3,-4,-21,-24,-26,-25,]),'+':([26,27,28,30,31,36,44,45,50,51,52,53,54,55,56,57,],[-36,43,-35,-34,-27,43,43,43,-30,-32,-33,-31,-29,-28,-37,43,]),'*':([26,27,28,30,31,36,44,45,50,51,52,53,54,55,56,57,],[-36,37,-35,-34,-27,37,37,37,-30,-32,-33,-31,-29,-28,-37,37,]),'CONST':([6,10,11,14,17,18,20,21,24,25,26,28,30,31,40,45,47,48,49,50,51,52,53,54,55,56,57,65,67,69,],[13,-8,13,-7,-5,-9,-21,-10,-6,-24,-36,-35,-34,-27,-26,-12,13,13,-25,-30,-32,-33,-31,-29,-28,-37,-13,13,-15,-14,]),'STRING':([8,9,12,23,29,32,37,38,39,41,42,43,46,],[-23,-22,26,26,26,26,26,26,26,26,26,26,26,]),'=':([15,33,61,],[32,46,32,]),')':([26,28,30,31,44,45,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,68,],[-36,-35,-34,-27,56,-12,-1,-1,-30,-32,-33,-31,-29,-28,-37,-13,64,-18,-19,-16,-17,66,-20,]),'ID':([3,6,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,65,67,69,],[5,15,-23,-22,-8,15,30,-11,-7,33,-5,-9,34,-21,-10,35,30,-6,-24,-36,-35,30,-34,-27,30,30,30,30,-26,30,30,30,-12,30,61,61,-25,-30,-32,-33,-31,-29,-28,-37,-13,61,-15,-14,]),'END':([6,10,11,14,17,18,20,21,24,25,26,27,28,30,31,36,40,45,49,50,51,52,53,54,55,56,57,67,69,],[20,-8,25,-7,-5,-9,-21,-10,-6,-24,-36,40,-35,-34,-27,49,-26,-12,-25,-30,-32,-33,-31,-29,-28,-37,-13,-15,-14,]),'-':([26,27,28,30,31,36,44,45,50,51,52,53,54,55,56,57,],[-36,42,-35,-34,-27,42,42,42,-30,-32,-33,-31,-29,-28,-37,42,]),'NUMBER':([8,9,12,23,29,32,37,38,39,41,42,43,46,],[-23,-22,28,28,28,28,28,28,28,28,28,28,28,]),'DEFP':([6,10,11,14,17,18,20,21,24,25,26,28,30,31,40,45,49,50,51,52,53,54,55,56,57,67,69,],[19,-8,19,-7,-5,-9,-21,-10,-6,-24,-36,-35,-34,-27,-26,-12,-25,-30,-32,-33,-31,-29,-28,-37,-13,-15,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'def_argument_list':([47,48,],[58,63,]),'empty':([47,48,],[59,59,]),'function_definition':([6,11,],[10,10,]),'statements':([6,],[11,]),'do_return':([6,11,],[12,23,]),'assignment':([6,11,47,48,65,],[14,14,62,62,62,]),'def_argument':([47,48,65,],[60,60,68,]),'expression':([12,23,29,32,46,],[27,36,44,45,57,]),'modules':([0,],[2,]),'assignment_qualifier':([6,11,47,48,65,],[16,16,16,16,16,]),'statement':([6,11,],[17,24,]),'private_function_definition':([6,11,],[18,18,]),'module':([0,2,],[1,4,]),'constant':([12,23,29,32,37,38,39,41,42,43,46,],[31,31,31,31,50,51,52,53,54,55,31,]),'do_block':([5,6,11,64,66,],[7,21,21,67,69,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> modules","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','__init__.py',13),
  ('modules -> module','modules',1,'p_modules','__init__.py',17),
  ('modules -> modules module','modules',2,'p_modules','__init__.py',18),
  ('module -> DEFMODULE ID do_block','module',3,'p_module','__init__.py',25),
  ('statements -> statement','statements',1,'p_statements','__init__.py',29),
  ('statements -> statements statement','statements',2,'p_statements','__init__.py',30),
  ('statement -> assignment','statement',1,'p_statement','__init__.py',34),
  ('statement -> function_definition','statement',1,'p_statement','__init__.py',35),
  ('statement -> private_function_definition','statement',1,'p_statement','__init__.py',36),
  ('statement -> do_block','statement',1,'p_statement','__init__.py',37),
  ('assignment_qualifier -> CONST','assignment_qualifier',1,'p_assignment_qualifier','__init__.py',46),
  ('assignment -> ID = expression','assignment',3,'p_assignment','__init__.py',50),
  ('assignment -> assignment_qualifier ID = expression','assignment',4,'p_assignment','__init__.py',51),
  ('function_definition -> DEF ID ( def_argument_list ) do_block','function_definition',6,'p_function_definition','__init__.py',59),
  ('private_function_definition -> DEFP ID ( def_argument_list ) do_block','private_function_definition',6,'p_private_function_definition','__init__.py',63),
  ('def_argument -> ID','def_argument',1,'p_function_def_argument','__init__.py',67),
  ('def_argument -> assignment','def_argument',1,'p_function_def_argument','__init__.py',68),
  ('def_argument_list -> empty','def_argument_list',1,'p_function_def_argument_list_empty','__init__.py',72),
  ('def_argument_list -> def_argument','def_argument_list',1,'p_function_def_argument_list','__init__.py',75),
  ('def_argument_list -> def_argument_list , def_argument','def_argument_list',3,'p_function_def_argument_list','__init__.py',76),
  ('do_block -> DO END','do_block',2,'p_do_block_empty','__init__.py',80),
  ('do_return -> RETURN','do_return',1,'p_do_return','__init__.py',83),
  ('do_return -> ','do_return',1,'p_do_return','__init__.py',84),
  ('do_block -> DO statements END','do_block',3,'p_do_block','__init__.py',87),
  ('do_block -> DO statements do_return expression END','do_block',5,'p_do_block_return','__init__.py',91),
  ('do_block -> DO do_return expression END','do_block',4,'p_do_block_return_immediate','__init__.py',95),
  ('expression -> constant','expression',1,'p_binary_expression','__init__.py',99),
  ('expression -> expression + constant','expression',3,'p_binary_expression','__init__.py',100),
  ('expression -> expression - constant','expression',3,'p_binary_expression','__init__.py',101),
  ('expression -> expression * constant','expression',3,'p_binary_expression','__init__.py',102),
  ('expression -> expression / constant','expression',3,'p_binary_expression','__init__.py',103),
  ('expression -> expression ^ constant','expression',3,'p_binary_expression','__init__.py',104),
  ('expression -> expression % constant','expression',3,'p_binary_expression','__init__.py',105),
  ('constant -> ID','constant',1,'p_constant','__init__.py',112),
  ('constant -> NUMBER','constant',1,'p_constant','__init__.py',113),
  ('constant -> STRING','constant',1,'p_constant','__init__.py',114),
  ('constant -> ( expression )','constant',3,'p_constant','__init__.py',115),
]
